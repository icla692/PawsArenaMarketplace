{"version":3,"file":"static/js/303.36ad1758.chunk.js","mappings":"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","sources":["pages/BuyNow.jsx","components/NFTCard.jsx","pages/Dashboard.jsx","../node_modules/react-spinners/esm/ClipLoader.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["import { useMutation, useQuery } from \"@tanstack/react-query\";\nimport React, { useState } from \"react\";\nimport { MARKETPLACE_CANISTER } from \"../Utils/constants\";\nimport { Principal } from \"@dfinity/principal\";\nimport { ClipLoader } from \"react-spinners\";\nimport useFecth from \"../Utils/useFecth\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst BuyNow = ({ nftid, nft_price, userP }) => {\n \n  const [isLoading, setIsLoading] = useState(false);\n\n  const [showModal, setShowModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState(\"\");\n  const [modalType, setModalType] = useState(\"\"); // \"success\" or \"error\"\n  const { invalidateListings, invalidateUserNfts, invalidateUserBalance } =\n    useFecth();\n  const displayNotificationModal = async (_message, _type) => {\n    setModalMessage(_message);\n    setModalType(_type);\n    setShowModal(true);\n    setTimeout(() => setShowModal(false), 3000);\n  };\n\n  const { data: userPrincipal } = useQuery({\n    queryKey: [\"userPrincipal\"],\n  });\n\n  const { data: userIcpBalance } = useQuery({\n    queryKey: [\"userIcpBalance\"],\n  });\n\n  const { data: allListings } = useQuery({\n    queryKey: [\"allListings\"],\n  });\n\n  const { data: userNFTS } = useQuery({\n    queryKey: [\"userNFTS\"],\n  });\n\n  const { data: nftActor } = useQuery({\n    queryKey: [\"nftActor\"],\n  });\n\n  const { data: marketplaceActor } = useQuery({\n    queryKey: [\"marketplaceActor\"],\n  });\n\n  const { data: IcpActor } = useQuery({\n    queryKey: [\"IcpActor\"],\n  });\n\n  const navigate = useNavigate()\n  const { mutateAsync: HandleBuy } = useMutation({\n    mutationFn: () => handleBuy(),\n    onSuccess: async () => {\n      invalidateListings();\n      invalidateUserNfts();\n      invalidateUserBalance();\n      setIsLoading(false);\n    },\n  });\n\n  const handleBuy = async () => {\n    try {\n      if (!marketplaceActor) {\n        alert(\"Log in first to purchase this NFT\")\n        displayNotificationModal(\"Log in first to purchase this NFT\", \"error\");\n        return};\n      // if (!window.confirm(\"buy this nft?\")) return;\n\n      setIsLoading(true);\n      //approve the marketplace to transfer funds on the user/s behalf\n      let approveResults = await IcpActor.icrc2_approve({\n        fee: [],\n        memo: [],\n        from_subaccount: [],\n        created_at_time: [],\n        amount: Number(nft_price) + 20000,\n        expected_allowance: [],\n        expires_at: [],\n        spender: {\n          owner: Principal.fromText(MARKETPLACE_CANISTER),\n          subaccount: [],\n        },\n      });\n\n      console.log(\"approve results :\", approveResults);\n\n      let res = await marketplaceActor.buy_nft(nftid);\n\n      if (res.status == 200 && res.status_text == \"Ok\") {\n        displayNotificationModal(\"NFT purchase successful\", \"success\");\n      } else {\n        displayNotificationModal(res.error_text, \"error\");\n      }\n      console.log(\"buy results :\", res);\n    } catch (error) {\n      console.log(\"error in buying nft :\", error);\n    }\n    navigate(\"/profile\")\n  };\n\n  return (\n    <>\n      {showModal && (\n        <div\n          className={`absolute top-10 z-50 text-xs  left-1/2 transform -translate-x-1/2 transition-transform duration-500 ease-out ${\n            modalType === \"success\"\n              ? \"bg-green-100 text-green-800 border border-green-300 rounded-lg p-1 animate-slide-in\"\n              : \"bg-red-100 text-red-800 border border-red-300 rounded-lg p-1 animate-slide-in\"\n          }`}\n        >\n          <div className=\"modal-message\">\n            <p>{modalMessage}</p>\n          </div>\n        </div>\n      )}\n\n      <button\n        onClick={() => HandleBuy()}\n        className=\"flex w-full bg-[#2E8DEE] rounded-b-lg mt-4 font-bold text-white justify-center items-center p-2\"\n        //  disabled={nft_price != undefined && userP == userPrincipal}\n      >\n        {isLoading ? (\n          <ClipLoader size={20} color=\"white\" />\n        ) : \n        // userP == userPrincipal ? (\n        //   \"View\"\n        // )\n        \n  \n          \"Buy\"\n        // ) :\"\"\n      }\n      </button>\n    </>\n  );\n};\n\nexport default BuyNow;\n","import { useEffect, useState } from \"react\";\nimport { BiHeart } from \"react-icons/bi\";\nimport { PAWS_ARENA_CANISTER } from \"../Utils/constants\";\nimport BuyNow from \"../pages/BuyNow\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nconst style = {\n  wrapper: `bg-[#212121] w-[200px] mb-3 rounded-md overflow-hidden group`, // Added group class\n  imgContainer: `h-40 bg-red-400 sm:h-32 md:h-36 w-full bg-[#121212] flex justify-center items-center overflow-hidden`,\n  nftImg: `w-[200px] h-48 ml-[3px] mt-[3px] rounded-t-md cursor-pointer object-cover`,\n  info: `flex justify-between text-white drop-shadow-xl ml-2 mr-2`,\n  infoLeft: `flex-0.6 flex-wrap`,\n  collectionName: `font-semibold text-xs sm:text-sm md:text-base lg:text-lg text-white`,\n  assetName: `font-bold mt-1`,\n  infoRight: `flex-0.4 text-right`,\n  priceTag: `font-semibold text-xs sm:text-sm md:text-base lg:text-lg text-white`,\n  priceValue: `flex items-center text-lg sm:text-xl md:text-2xl font-bold mt-1`,\n  ethLogo: `h-5 mr-2`,\n  likes: `text-[#8a939b] font-bold flex items-center w-full justify-end mt-2`,\n  likeIcon: `text-xl mr-2`,\n  buyButtonContainer: `opacity-0 group-hover:opacity-100 transition-opacity duration-300`, // Hidden by default, visible on hover\n};\n\nconst NFTCard = ({ nft }) => {\n  const { data: userPrincipal } = useQuery({\n    queryKey: [\"userPrincipal\"],\n  });\n\n  const navigate = useNavigate();\n\n  return (\n    <div className={style.wrapper}>\n      <img\n        src={`https://${nft[1].nft_canister}.raw.icp0.io/?tokenid=${nft[1].token_identifier}&type=thumbnail`}\n        alt=\"\"\n        onClick={() =>\n          navigate(\n            `../marketplace/` + nft[1].nft_canister + \"/\" + nft[1].nft_id\n          )\n        }\n        className={style.nftImg}\n      />\n      <div className={style.details}>\n        <div className={style.info}>\n          <div className={style.infoLeft}>\n            <div className={style.collectionName}>\n              {Object.keys(nft[1].nft_category)}\n            </div>\n            <div className={style.priceTag}>\n              {Number(nft[1].nft_price) / 1e8} ICP\n            </div>\n          </div>\n          <div className={style.infoRight}>\n            <div className={style.assetName}>#{nft[1].nft_id} </div>\n          </div>\n        </div>\n\n        {/* BuyNow button container */}\n        <div className={style.buyButtonContainer}>\n          <BuyNow \n            nftid={nft[0]} \n            nft_price={Number(nft[1].nft_price)} \n            userP={nft[1].seller_principal} \n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NFTCard;\n","import { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport React from \"react\";\nimport NFTCard from \"../components/NFTCard\";\nimport { useNavigate } from \"react-router-dom\";\nconst Dashboard = () => {\n  const navigate = useNavigate();\n\n  const queryClient = useQueryClient();\n\n  const { data: userPrincipal } = useQuery({\n    queryKey: [\"userPrincipal\"],\n  });\n\n  const { data: allListings } = useQuery({\n    queryKey: [\"allListings\"],\n  });\n\n  const { data: userIcpBalance } = useQuery({\n    queryKey: [\"userIcpBalance\"],\n  });\n\n  const { data: marketplaceActor } = useQuery({\n    queryKey: [\"marketplaceActor\"],\n  });\n\n  const { data: nftActor } = useQuery({\n    queryKey: [\"nftActor\"],\n  });\n\n  const { data: userAccountId } = useQuery({\n    queryKey: [\"userAccountId\"],\n  });\n\n  return (\n    <>\n      <div className=\"flex bg-[#121212] flex-col py-2 min-h-screen  items-center w-full\">\n        {userPrincipal ? (\n          <div className=\"flex px-4 flex-wrap justify-center md:justify-start items-center gap-3\">\n            {allListings &&\n              allListings?.map((nft, index) => {\n                return (\n                  <div className=\"\" key={index}>\n                    {\" \"}\n                    {/* Set width based on screen size */}\n                    <NFTCard nft={nft} index={index} />\n                  </div>\n                );\n              })}\n          </div>\n        ) : (\n          // <div className=\"flex px-4 text-white flex-wrap justify-center md:justify-start items-center gap-3\">Please login first</div>\n\n          navigate(\"/\")\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n\n{\n  /* <div key={index} className=\"bg-white p-4 rounded shadow-md\">\n                <h2 className=\"text-lg font-bold\">Title</h2>\n                <p>{nft.description}</p>\n              </div> */\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else if (this.#currentMutation?.state.status === 'pending') {\n      this.#currentMutation.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { noop, shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n"],"names":["_ref","nftid","nft_price","userP","isLoading","setIsLoading","useState","showModal","setShowModal","modalMessage","setModalMessage","modalType","setModalType","invalidateListings","invalidateUserNfts","invalidateUserBalance","useFecth","displayNotificationModal","async","_message","_type","setTimeout","data","userPrincipal","useQuery","queryKey","userIcpBalance","allListings","userNFTS","nftActor","marketplaceActor","IcpActor","navigate","useNavigate","mutateAsync","HandleBuy","useMutation","mutationFn","handleBuy","onSuccess","alert","approveResults","icrc2_approve","fee","memo","from_subaccount","created_at_time","amount","Number","expected_allowance","expires_at","spender","owner","Principal","fromText","MARKETPLACE_CANISTER","subaccount","console","log","res","buy_nft","status","status_text","error_text","error","_jsxs","_Fragment","children","_jsx","className","onClick","ClipLoader","size","color","style","wrapper","imgContainer","nftImg","info","infoLeft","collectionName","assetName","infoRight","priceTag","priceValue","ethLogo","likes","likeIcon","buyButtonContainer","nft","src","nft_canister","token_identifier","alt","nft_id","details","Object","keys","nft_category","BuyNow","seller_principal","Dashboard","useQueryClient","userAccountId","map","index","NFTCard","__assign","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","createAnimation","_a","_b","loading","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","background","width","cssValue","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","concat","animationFillMode","React","MutationObserver","Subscribable","constructor","client","options","super","setOptions","bindMethods","mutate","bind","reset","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","type","mutation","observer","mutationKey","hashKey","state","onUnsubscribe","hasListeners","removeObserver","onMutationUpdate","action","getCurrentResult","variables","build","addObserver","execute","getDefaultState","isPending","isSuccess","isError","isIdle","notifyManager","batch","context","onSettled","onError","listeners","forEach","listener","queryClient","result","onStoreChange","subscribe","batchCalls","mutateOptions","catch","noop","shouldThrowError","throwOnError"],"sourceRoot":""}