"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[303],{4186:(e,t,a)=>{a.d(t,{c:()=>r});const r=e=>{let{IDL:t}=e;const a=t.Record({owner:t.Principal,subaccount:t.Opt(t.Vec(t.Nat8))}),r=t.Record({icrc2:t.Bool}),c=t.Record({icrc1_minting_account:t.Opt(a),feature_flags:t.Opt(r)}),n=t.Record({e8s:t.Nat64}),o=t.Record({secs:t.Nat64,nanos:t.Nat32}),i=t.Record({num_blocks_to_archive:t.Nat64,max_transactions_per_response:t.Opt(t.Nat64),trigger_threshold:t.Nat64,more_controller_ids:t.Opt(t.Vec(t.Principal)),max_message_size_bytes:t.Opt(t.Nat64),cycles_for_archive_creation:t.Opt(t.Nat64),node_max_memory_size_bytes:t.Opt(t.Nat64),controller_id:t.Principal}),s=t.Record({send_whitelist:t.Vec(t.Principal),token_symbol:t.Opt(t.Text),transfer_fee:t.Opt(n),minting_account:t.Text,maximum_number_of_accounts:t.Opt(t.Nat64),accounts_overflow_trim_quantity:t.Opt(t.Nat64),transaction_window:t.Opt(o),max_message_size_bytes:t.Opt(t.Nat64),icrc1_minting_account:t.Opt(a),archive_options:t.Opt(i),initial_values:t.Vec(t.Tuple(t.Text,n)),token_name:t.Opt(t.Text),feature_flags:t.Opt(r)}),l=(t.Variant({Upgrade:t.Opt(c),Init:s}),t.Record({account:t.Vec(t.Nat8)})),d=t.Record({account:t.Text}),u=t.Record({canister_id:t.Principal}),p=t.Record({archives:t.Vec(u)}),m=t.Record({decimals:t.Nat32}),_=t.Record({url:t.Text,name:t.Text}),f=t.Variant({Int:t.Int,Nat:t.Nat,Blob:t.Vec(t.Nat8),Text:t.Text}),N=t.Record({to:a,fee:t.Opt(t.Nat),memo:t.Opt(t.Vec(t.Nat8)),from_subaccount:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Opt(t.Nat64),amount:t.Nat}),x=t.Variant({GenericError:t.Record({message:t.Text,error_code:t.Nat}),TemporarilyUnavailable:t.Null,BadBurn:t.Record({min_burn_amount:t.Nat}),Duplicate:t.Record({duplicate_of:t.Nat}),BadFee:t.Record({expected_fee:t.Nat}),CreatedInFuture:t.Record({ledger_time:t.Nat64}),TooOld:t.Null,InsufficientFunds:t.Record({balance:t.Nat})}),y=t.Variant({Ok:t.Nat,Err:x}),g=t.Record({utc_offset_minutes:t.Opt(t.Int16),language:t.Text}),b=t.Variant({GenericDisplay:t.Null,LineDisplay:t.Record({characters_per_line:t.Nat16,lines_per_page:t.Nat16})}),h=t.Record({metadata:g,device_spec:t.Opt(b)}),R=t.Record({arg:t.Vec(t.Nat8),method:t.Text,user_preferences:h}),O=t.Record({lines:t.Vec(t.Text)}),V=t.Variant({LineDisplayMessage:t.Record({pages:t.Vec(O)}),GenericDisplayMessage:t.Text}),v=t.Record({metadata:g,consent_message:V}),w=t.Record({description:t.Text}),F=t.Variant({GenericError:t.Record({description:t.Text,error_code:t.Nat}),InsufficientPayment:w,UnsupportedCanisterCall:w,ConsentMessageUnavailable:w}),T=t.Variant({Ok:v,Err:F}),k=t.Record({account:a,spender:a}),j=t.Record({allowance:t.Nat,expires_at:t.Opt(t.Nat64)}),q=t.Record({fee:t.Opt(t.Nat),memo:t.Opt(t.Vec(t.Nat8)),from_subaccount:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Opt(t.Nat64),amount:t.Nat,expected_allowance:t.Opt(t.Nat),expires_at:t.Opt(t.Nat64),spender:a}),I=t.Variant({GenericError:t.Record({message:t.Text,error_code:t.Nat}),TemporarilyUnavailable:t.Null,Duplicate:t.Record({duplicate_of:t.Nat}),BadFee:t.Record({expected_fee:t.Nat}),AllowanceChanged:t.Record({current_allowance:t.Nat}),CreatedInFuture:t.Record({ledger_time:t.Nat64}),TooOld:t.Null,Expired:t.Record({ledger_time:t.Nat64}),InsufficientFunds:t.Record({balance:t.Nat})}),C=t.Variant({Ok:t.Nat,Err:I}),B=t.Record({to:a,fee:t.Opt(t.Nat),spender_subaccount:t.Opt(t.Vec(t.Nat8)),from:a,memo:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Opt(t.Nat64),amount:t.Nat}),E=t.Variant({GenericError:t.Record({message:t.Text,error_code:t.Nat}),TemporarilyUnavailable:t.Null,InsufficientAllowance:t.Record({allowance:t.Nat}),BadBurn:t.Record({min_burn_amount:t.Nat}),Duplicate:t.Record({duplicate_of:t.Nat}),BadFee:t.Record({expected_fee:t.Nat}),CreatedInFuture:t.Record({ledger_time:t.Nat64}),TooOld:t.Null,InsufficientFunds:t.Record({balance:t.Nat})}),D=t.Variant({Ok:t.Nat,Err:E}),P=t.Record({name:t.Text}),A=t.Record({start:t.Nat64,length:t.Nat64}),L=t.Record({timestamp_nanos:t.Nat64}),M=t.Variant({Approve:t.Record({fee:n,from:t.Vec(t.Nat8),allowance_e8s:t.Int,allowance:n,expected_allowance:t.Opt(n),expires_at:t.Opt(L),spender:t.Vec(t.Nat8)}),Burn:t.Record({from:t.Vec(t.Nat8),amount:n,spender:t.Opt(t.Vec(t.Nat8))}),Mint:t.Record({to:t.Vec(t.Nat8),amount:n}),Transfer:t.Record({to:t.Vec(t.Nat8),fee:n,from:t.Vec(t.Nat8),amount:n,spender:t.Opt(t.Vec(t.Nat8))})}),U=t.Record({memo:t.Nat64,icrc1_memo:t.Opt(t.Vec(t.Nat8)),operation:t.Opt(M),created_at_time:L}),K=t.Record({transaction:U,timestamp:L,parent_hash:t.Opt(t.Vec(t.Nat8))}),S=t.Record({blocks:t.Vec(K)}),G=t.Variant({BadFirstBlockIndex:t.Record({requested_index:t.Nat64,first_valid_index:t.Nat64}),Other:t.Record({error_message:t.Text,error_code:t.Nat64})}),z=t.Variant({Ok:S,Err:G}),Q=t.Record({callback:t.Func([A],[z],["query"]),start:t.Nat64,length:t.Nat64}),Z=t.Record({certificate:t.Opt(t.Vec(t.Nat8)),blocks:t.Vec(K),chain_length:t.Nat64,first_block_index:t.Nat64,archived_blocks:t.Vec(Q)}),W=t.Variant({Ok:t.Vec(t.Vec(t.Nat8)),Err:G}),$=t.Record({callback:t.Func([A],[W],["query"]),start:t.Nat64,length:t.Nat64}),J=t.Record({certificate:t.Opt(t.Vec(t.Nat8)),blocks:t.Vec(t.Vec(t.Nat8)),chain_length:t.Nat64,first_block_index:t.Nat64,archived_blocks:t.Vec($)}),Y=t.Record({to:t.Text,fee:n,memo:t.Nat64,from_subaccount:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Opt(L),amount:n}),H=t.Record({symbol:t.Text}),X=t.Record({to:t.Vec(t.Nat8),fee:n,memo:t.Nat64,from_subaccount:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Opt(L),amount:n}),ee=t.Variant({TxTooOld:t.Record({allowed_window_nanos:t.Nat64}),BadFee:t.Record({expected_fee:n}),TxDuplicate:t.Record({duplicate_of:t.Nat64}),TxCreatedInFuture:t.Null,InsufficientFunds:t.Record({balance:n})}),te=t.Variant({Ok:t.Nat64,Err:ee}),ae=t.Record({transfer_fee:n});return t.Service({account_balance:t.Func([l],[n],["query"]),account_balance_dfx:t.Func([d],[n],["query"]),account_identifier:t.Func([a],[t.Vec(t.Nat8)],["query"]),archives:t.Func([],[p],["query"]),decimals:t.Func([],[m],["query"]),icrc10_supported_standards:t.Func([],[t.Vec(_)],["query"]),icrc1_balance_of:t.Func([a],[t.Nat],["query"]),icrc1_decimals:t.Func([],[t.Nat8],["query"]),icrc1_fee:t.Func([],[t.Nat],["query"]),icrc1_metadata:t.Func([],[t.Vec(t.Tuple(t.Text,f))],["query"]),icrc1_minting_account:t.Func([],[t.Opt(a)],["query"]),icrc1_name:t.Func([],[t.Text],["query"]),icrc1_supported_standards:t.Func([],[t.Vec(_)],["query"]),icrc1_symbol:t.Func([],[t.Text],["query"]),icrc1_total_supply:t.Func([],[t.Nat],["query"]),icrc1_transfer:t.Func([N],[y],[]),icrc21_canister_call_consent_message:t.Func([R],[T],[]),icrc2_allowance:t.Func([k],[j],["query"]),icrc2_approve:t.Func([q],[C],[]),icrc2_transfer_from:t.Func([B],[D],[]),name:t.Func([],[P],["query"]),query_blocks:t.Func([A],[Z],["query"]),query_encoded_blocks:t.Func([A],[J],["query"]),send_dfx:t.Func([Y],[t.Nat64],[]),symbol:t.Func([],[H],["query"]),transfer:t.Func([X],[te],[]),transfer_fee:t.Func([t.Record({})],[ae],["query"])})}},8657:(e,t,a)=>{a.d(t,{A:()=>f});var r=a(3248),c=a(5043),n=a(1935),o=a(2198),i=a(8247),s=a(2013),l=a(3216),d=a(39),u=a(1699),p=a(4230),m=a(4186),_=a(579);const f=e=>{let{nftid:t,nft_price:a,userP:f}=e;const[N,x]=(0,c.useState)(!1),[y,g]=(0,c.useState)(!1),[b,h]=(0,c.useState)(""),[R,O]=(0,c.useState)(""),{invalidateListings:V,invalidateUserNfts:v,invalidateUserBalance:w}=(0,s.A)(),F=(0,d.fJ)({retryTimes:3}),{user:T}=(0,d._d)(),k=async(e,t)=>{h(e),O(t),g(!0)},j=((0,l.Zp)(),(0,r.jE)());return(0,_.jsxs)("div",{className:"flex w-1/2",children:[y&&(0,_.jsx)("div",{className:"fixed inset-0 z-50 flex items-center justify-center",children:(0,_.jsxs)("div",{className:"flex items-center flex-col text-white border p-2 rounded-lg "+("success"==R?"bg-green-800":"bg-red-500"),children:[(0,_.jsx)("p",{children:b}),(0,_.jsx)("button",{className:"mt-2 w-[50px] bg-gray-200 text-gray-800 rounded px-1 py-1",onClick:()=>{g(!1)},children:"ok"})]})}),(0,_.jsx)("button",{onClick:()=>(async()=>{let e=(0,u.M)(n.WC,p.c,F);const r=(0,u.M)(n.tc,m.c,F);try{if(!T||!F)return void k("Log in first to purchase this NFT","error");x(!0);let c=await r.icrc2_approve({fee:[],memo:[],from_subaccount:[],created_at_time:[],amount:Number(a)+2e4,expected_allowance:[],expires_at:[],spender:{owner:o.Principal.fromText(n.WC),subaccount:[]}});if(console.log("approve results :",c),c.Err)return k("error in approving ICP amount","error"),void x(!1);let i=await e.buy_nft(t);200==i.status&&"Ok"==i.status_text?(k("NFT purchase successful. Your NFT will be sent to your wallet shortly","success"),x(!1),j.setQueryData(["refreshData"],Math.random().toString()),j.invalidateQueries(["listedNfts"])):(k(i.error_text,"error"),x(!1),j.setQueryData(["refreshData"],Math.random().toString()),j.invalidateQueries(["listedNfts"]))}catch(c){console.log("error in buying nft :",c)}x(!1)})(),className:"flex bg-[#2E8DEE] w-full rounded-lg mt-4 text-white justify-center items-center p-2",children:N?(0,_.jsx)(i.A,{size:20,color:"white"}):"Buy"})]})}},1303:(e,t,a)=>{a.r(t),a.d(t,{default:()=>d});var r=a(3248),c=a(3747),n=(a(5043),a(1935),a(8657)),o=a(3216),i=a(579);const s={wrapper:"bg-[#212121] w-[200px] mb-3 rounded-md overflow-hidden group",imgContainer:"h-40 bg-red-400 sm:h-32 md:h-36 w-full bg-[#121212] flex justify-center items-center overflow-hidden",nftImg:"w-[200px] h-48 ml-[3px] mt-[3px] rounded-t-md cursor-pointer object-cover",info:"flex justify-between text-white drop-shadow-xl ml-2 mr-2",infoLeft:"flex-0.6 flex-wrap",collectionName:"font-semibold text-xs sm:text-sm md:text-base lg:text-lg text-white",assetName:"font-bold mt-1",infoRight:"flex-0.4 text-right",priceTag:"font-semibold text-xs sm:text-sm md:text-base lg:text-lg text-white",priceValue:"flex items-center text-lg sm:text-xl md:text-2xl font-bold mt-1",ethLogo:"h-5 mr-2",likes:"text-[#8a939b] font-bold flex items-center w-full justify-end mt-2",likeIcon:"text-xl mr-2",buyButtonContainer:"opacity-0 group-hover:opacity-100 transition-opacity duration-300"},l=e=>{let{nft:t}=e;const{data:a}=(0,c.I)({queryKey:["userPrincipal"]}),r=(0,o.Zp)();return(0,i.jsxs)("div",{className:s.wrapper,children:[(0,i.jsx)("img",{src:`https://${t[1].nft_canister}.raw.icp0.io/?tokenid=${t[1].token_identifier}&type=thumbnail`,alt:"",onClick:()=>r("../marketplace/"+t[1].nft_canister+"/"+t[1].nft_id),className:s.nftImg}),(0,i.jsxs)("div",{className:s.details,children:[(0,i.jsxs)("div",{className:s.info,children:[(0,i.jsxs)("div",{className:s.infoLeft,children:[(0,i.jsx)("div",{className:s.collectionName,children:Object.keys(t[1].nft_category)}),(0,i.jsxs)("div",{className:s.priceTag,children:[Number(t[1].nft_price)/1e8," ICP"]})]}),(0,i.jsx)("div",{className:s.infoRight,children:(0,i.jsxs)("div",{className:s.assetName,children:["#",t[1].nft_id," "]})})]}),(0,i.jsx)("div",{className:s.buyButtonContainer,children:(0,i.jsx)(n.A,{nftid:t[0],nft_price:Number(t[1].nft_price),userP:t[1].seller_principal})})]})]})},d=()=>{const e=(0,o.Zp)(),{data:t}=((0,r.jE)(),(0,c.I)({queryKey:["userPrincipal"]})),{data:a}=(0,c.I)({queryKey:["allListings"]}),{data:n}=(0,c.I)({queryKey:["userIcpBalance"]}),{data:s}=(0,c.I)({queryKey:["marketplaceActor"]}),{data:d}=(0,c.I)({queryKey:["nftActor"]}),{data:u}=(0,c.I)({queryKey:["userAccountId"]});return(0,i.jsx)(i.Fragment,{children:(0,i.jsx)("div",{className:"flex bg-[#121212] flex-col py-2 min-h-screen  items-center w-full",children:t?(0,i.jsx)("div",{className:"flex px-4 flex-wrap justify-center md:justify-start items-center gap-3",children:a&&(null===a||void 0===a?void 0:a.map(((e,t)=>(0,i.jsxs)("div",{className:"",children:[" ",(0,i.jsx)(l,{nft:e,index:t})]},t))))}):e("/")})})}}}]);
//# sourceMappingURL=303.fe8662cd.chunk.js.map